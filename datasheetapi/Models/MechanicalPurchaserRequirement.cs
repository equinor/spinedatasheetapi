namespace datasheetapi.Models;

public class MechanicalPurchaserRequirement
{
    public string? ConformityAssesmentSystemLevel { get; set; }
    public string? TagNumber { get; set; }
    public string? TagDescription { get; set; }
    public string? ApplicableTo { get; set; }
    public string? Units { get; set; }
    public string? Manufacturer { get; set; }
    public string? PumpModelAndSize { get; set; }
    public string? NumberOfStages { get; set; }
    public string? NumberOfPumpUnits { get; set; }
    public string? ServiceType { get; set; }
    public string? NumberOfStarts { get; set; }
    public string? InstantaneousStartUp { get; set; }
    public string? PumpOperationalMode { get; set; }
    public string? PumpStartUpMode { get; set; }
    public string? IndividualPumpFlowControl { get; set; }
    public string? ProjectCountry { get; set; }
    public string? ProjectRegion { get; set; }
    public string? PlantEnvironmentalLocation { get; set; }
    public string? EquipmentLocation { get; set; }
    public string? LocationClimate { get; set; }
    public string? LocationSunlightProtection { get; set; }
    public string? SiteDataMounting { get; set; }
    public string? SpecialWeatherProtection { get; set; }
    public string? Elevation { get; set; }
    public string? Barometer { get; set; }
    public string? MaximumAmbientTemperature { get; set; }
    public string? MinimumAmbientTemperature { get; set; }
    public string? MaximumRelativeHumidity { get; set; }
    public string? MinimumRelativeHumidity { get; set; }
    public string? UnusualConditions { get; set; }
    public string? FloatingApplicationsMotionDesignCriteria { get; set; }
    public string? HazardousAreaClassificationStandard { get; set; }
    public string? ExplosionHazardClassificationIEC { get; set; }
    public string? ExplosionGasGroupIEC { get; set; }
    public string? TemperatureClassIEC { get; set; }
    public string? ExplosionHazardClassificationNFPA { get; set; }
    public string? ExplosionGasGroupNFPA { get; set; }
    public string? TemperatureClassNFPA { get; set; }
    public string? IgnitionHazardAssessment { get; set; }
    public double? DriversVoltage { get; set; }
    public double? DriversPhase { get; set; }
    public double? DriversFrequency { get; set; }
    public string? HeatingMedium { get; set; }
    public double? HeatingVoltage { get; set; }
    public double? HeatingPhase { get; set; }
    public double? HeatingFrequency { get; set; }
    public double? HeatingSteamMinimumTemperature { get; set; }
    public double? HeatingSteamMaximumTemperature { get; set; }
    public double? HeatingSteamMinimumPressure { get; set; }
    public double? HeatingSteamMaximumPressure { get; set; }
    public double? CoolingWaterMaximumInletTemperature { get; set; }
    public double? CoolingWaterDesignTemperature { get; set; }
    public double? CoolingWaterMaximumInletPressure { get; set; }
    public double? CoolingWaterDesignPressure { get; set; }
    public string? CoolingWaterType { get; set; }
    public double? FoulingFactor { get; set; }
    public double? CoolingWaterChlorideConcentration { get; set; }
    public double? InstrumentAirMinimumPressure { get; set; }
    public double? InstrumentAirMaximumPressure { get; set; }
    public string? LiquidName { get; set; }
    public string? LiquidType { get; set; }
    public double? VaporPressureAtRatedTemperature { get; set; }
    public double? VaporPressureMaximum { get; set; }
    public double? VaporPressureMinimum { get; set; }
    public double? RelativeDensityRated { get; set; }
    public double? RelativeDensityMaximum { get; set; }
    public double? RelativeDensityMinimum { get; set; }
    public string? SpecificHeatRated { get; set; }
    public string? SpecificHeatMaximum { get; set; }
    public string? SpecificHeatMinimum { get; set; }
    public double? ViscosityRated { get; set; }
    public double? ViscosityMaximum { get; set; }
    public double? ViscosityMinimum { get; set; }
    public string? CorrosiveConstituents { get; set; }
    public string? ErosiveConstituents { get; set; }
    public double? H2SConcentration { get; set; }
    public double? ChlorideConcentration { get; set; }
    public double? TotalDissolvedSalts { get; set; }
    public double? ParticulateSize { get; set; }
    public double? ParticulateConcentration { get; set; }
    public string? NPSHADatum { get; set; }
    public double? FlowRated { get; set; }
    public double? FlowNormal { get; set; }
    public double? FlowMaximum { get; set; }
    public double? FlowMinimum { get; set; }
    public double? FlowAlternativeCondition { get; set; }
    public double? NPSHARated { get; set; }
    public double? NPSHANormal { get; set; }
    public double? NPSHAMaximum { get; set; }
    public double? NPSHAMinimum { get; set; }
    public double? NPSHAAlternativeCondition { get; set; }
    public double? NPSHAAt120PercentOfRatedFlow { get; set; }
    public double? PumpingTemperatureRated { get; set; }
    public double? PumpingTemperatureNormal { get; set; }
    public double? PumpingTemperatureMaximum { get; set; }
    public double? PumpingTemperatureMinimum { get; set; }
    public double? PumpingTemperatureAlternativeCondition { get; set; }
    public double? DischargePressureRated { get; set; }
    public double? DischargePressureMaximum { get; set; }
    public double? DischargePressureAlternativeCondition { get; set; }
    public double? SuctionPressureRated { get; set; }
    public double? SuctionPressureNormal { get; set; }
    public double? SuctionPressureMaximum { get; set; }
    public double? SuctionPressureMinimum { get; set; }
    public double? SuctionPressureAlternativeCondition { get; set; }
    public double? DifferentialPressureRated { get; set; }
    public double? DifferentialPressureAlternativeCondition { get; set; }
    public double? DifferentialHeadRated { get; set; }
    public double? DifferentialHeadAlternativeCondition { get; set; }
    public double? HydraulicPower { get; set; }
    public string? ProposalCurveNumber { get; set; }
    public double? ImpellerDiameterRated { get; set; }
    public double? ImpellerDiameterMaximum { get; set; }
    public double? ImpellerDiameterMinimum { get; set; }
    public double? RatedSpeed { get; set; }
    public double? RatedPower { get; set; }
    public double? Efficiency { get; set; }
    public double? ProposalCurveBEPFlow { get; set; }
    public double? MinimumFlowThermal { get; set; }
    public double? MinimumFlowStable { get; set; }
    public double? StartOfPreferredOperatingRegion { get; set; }
    public double? EndOfPreferredOperatingRegion { get; set; }
    public double? StartOfAllowableOperatingRegion { get; set; }
    public double? EndOfAllowableOperatingRegion { get; set; }
    public double? MaximumHeadAtRatedImpeller { get; set; }
    public double? MaximumPowerAtRatedImpeller { get; set; }
    public double? NPSH3AtRatedFlow { get; set; }
    public double? NPSH3At120PercentOfFlow { get; set; }
    public double? NPSHANPSH3MarginAtRatedFlow { get; set; }
    public double? NPSHANPSH3MarginInAllowableOperatingRegion { get; set; }
    public double? SpecificSpeed { get; set; }
    public double? SuctionSpecificSpeed { get; set; }
    public double? MaximumAllowableSoundPressureLevel { get; set; }
    public double? MaximumAllowableSoundPowerLevel { get; set; }
    public string? APIPumpType { get; set; }
    public string? ConstructionMounting { get; set; }
    public string? CasingType { get; set; }
    public string? ImpellerType { get; set; }
    public string? RotationViewedFromCouplingEnd { get; set; }
    public string? ComponentBalanceToISO2194011GradeG10 { get; set; }
    public double? ImpellerNumberOfVanes { get; set; }
    public double? SuctionSize { get; set; }
    public string? SuctionFacing { get; set; }
    public double? SuctionRating { get; set; }
    public string? SuctionPosition { get; set; }
    public double? DischargeSize { get; set; }
    public string? DischargeFacing { get; set; }
    public double? DischargeRating { get; set; }
    public string? DischargePosition { get; set; }
    public string? NozzleLoads { get; set; }
    public string? AuxilliaryProcessLiquidPipingConstruction { get; set; }
    public string? ConnectionDesignApprovalPriorToFabrication { get; set; }
    public string? PressureCasingDrainSize { get; set; }
    public double? PressureCasingVentSize { get; set; }
    public string? DrainValveSuppliedBy { get; set; }
    public string? VentValveSuppliedBy { get; set; }
    public string? PumpWarmUpOrCooldownLine { get; set; }
    public string? MachinedAndStuddedConnections { get; set; }
    public string? PipeThreadsSpecification { get; set; }
    public double? CasePressureRatingMaximumAllowableWorkingTemperature { get; set; }
    public double? CasePressureRatingMaximumAllowableWorkingPressure { get; set; }
    public string? BearingHousingCoolingMethod { get; set; }
    public string? CoolingWaterPipingPlan { get; set; }
    public string? HeatTracingAndOrInsulation { get; set; }
    public string? PurposeOfInsulation { get; set; }
    public string? ExtentOfHeatTracingAndInsulation { get; set; }
    public string? HeatTracingAndOrInsulationSuppliedAndInstalledBy { get; set; }
    public string? HeatingTracingAndOrInsulationSpecification { get; set; }
    public double? TotalPackageEstimatedMass { get; set; }
    public string? ShaftFlexibilityIndexReportedByVendor { get; set; }
    public string? ShaftFlexibilityIndexOH2PumpsOnly { get; set; }
    public string? OH3BackPulloutLiftingDevice { get; set; }
    public string? ShrinkFitLimitedMovementImpellers { get; set; }
    public double? HeadMaximumAllowableWorkingPressure { get; set; }
    public double? ColumnMaximumAllowableWorkingPressure { get; set; }
    public double? BowlMaximumAllowableWorkingPressure { get; set; }
    public double? SuctionBarrelOrCanMaximumAllowableWorkingPressure { get; set; }
    public string? PumpThrustBearingLocation { get; set; }
    public string? SuctionStrainerType { get; set; }
    public string? LevelControlBy { get; set; }
    public string? LineShaftConnection { get; set; }
    public string? LineShaftConfiguration { get; set; }
    public string? LineShaftBearingLube { get; set; }
    public double? LineShaftBearingQuantity { get; set; }
    public string? HardenedSleevesUnderLineShaftBearings { get; set; }
    public double? GradeUndersideOfPumpMountingPlateOrTopOfFoundationElevation { get; set; }
    public double? LowLiquidLevelElevation { get; set; }
    public double? SumpFloorElevation { get; set; }
    public double? SumpDiameter { get; set; }
    public double? GradeToTopOfPumpDischargeConnectionDimension { get; set; }
    public double? PumpLengthGradeToUndersideOfPumpInletBellOrStrainerDimension { get; set; }
    public double? GradeToFirstStageImpellerCenterlineDimension { get; set; }
    public double? GradeToLiquidMinimumSubmergenceLevelDimension { get; set; }
    public string? RadialBearingType { get; set; }
    public string? ThrustTypeBearing { get; set; }
    public string? ReviewAndAcceptanceOfThrustBearingSize { get; set; }
    public string? RollingElementBearingLifeCalculations { get; set; }
    public string? Lubrication { get; set; }
    public string? OilViscosityISOGrade { get; set; }
    public string? OilType { get; set; }
    public string? GreaseType { get; set; }
    public string? GreaseGrade { get; set; }
    public string? BearingHousingSealingTypeModel { get; set; }
    public string? OilMistReclassifiersSuppliedBy { get; set; }
    public string? AnnexHClass { get; set; }
    public double? MinimumDesignMetalTemperature { get; set; }
    public string? ReducedHardnessMaterials { get; set; }
    public string? ApplicableHardnessStandard { get; set; }
    public string? SpecialCoatingForImpellerAndOtherWettedParts { get; set; }
    public string? CaseAndCaseCoverMaterial { get; set; }
    public string? NonwettedPressureRetainingFastenersMaterial { get; set; }
    public string? DiffuserMaterial { get; set; }
    public string? ImpellerMaterial { get; set; }
    public string? InducerMaterial { get; set; }
    public string? ImpellerWearComponentType { get; set; }
    public string? ImpellerWearComponentMaterial { get; set; }
    public double? ImpellerWearComponentHardness { get; set; }
    public string? CaseWearRingMaterial { get; set; }
    public double? WearPartsHardnesses { get; set; }
    public string? ShaftMaterial { get; set; }
    public string? AuxilliaryProcessLiquidLinesFittingsAndOtherConnectionsToCasingIncludingSealPlansMaterial { get; set; }
    public string? SuctionBarrelCanMaterial { get; set; }
    public string? DischargeHeadMaterial { get; set; }
    public string? DischargeColumnMaterial { get; set; }
    public string? HeadColumnMaterial { get; set; }
    public string? DischargeElbowAndPipeMaterial { get; set; }
    public string? BowlCasingMaterial { get; set; }
    public string? BellmouthSuctionCoverMaterial { get; set; }
    public string? StrainerMaterial { get; set; }
    public string? LineShaftMaterial { get; set; }
    public string? ShaftEnclosingTubeMaterial { get; set; }
    public string? BowlShaftMaterial { get; set; }
    public string? ProcessWettedFastenersMaterial { get; set; }
    public string? BearingRetainerOrSpiderMaterial { get; set; }
    public string? LineShaftBearingMaterial { get; set; }
    public string? LineShaftHardFacingMaterial { get; set; }
    public string? LineShaftSleevesMaterial { get; set; }
    public string? BearingLubricationLinesMaterial { get; set; }
    public string? BowlBearingMaterial { get; set; }
    public string? MaterialInspectionRequirements { get; set; }
    public string? ImpactTestAsPer { get; set; }
    public string? HardnessTestingOfPartsWeldsAndHeatAffectedZones { get; set; }
    public string? AdditionalSurfaceSubSurfaceExamination { get; set; }
    public string? AdditionalSurfaceSubSurfaceExaminationFor { get; set; }
    public string? AdditionalSurfaceMagneticParticleOrLiquidPenetrantExamination { get; set; }
    public string? AdditionalSubSurfaceUltrasonicOrRadiographicExamination { get; set; }
    public string? AdditionalComponentsPMITested { get; set; }
    public string? RepairAndHeatTreatmentRecords { get; set; }
    public string? APIStandard682MechanicalSealCode { get; set; }
    public string? APIStandard682DataSheetAttached { get; set; }
    public double? MechanicalSealPrimaryPlan { get; set; }
    public string? MechanicalSealPrimaryPlanConstruction { get; set; }
    public string? MechanicalSealSecondaryPlan { get; set; }
    public string? TubingFittingsManufacturer { get; set; }
    public string? AdditionalCentralFlushPort { get; set; }
    public string? HeatingJacketRequired { get; set; }
    public double? StaticSealingPressureMaximum { get; set; }
    public double? StaticSealingPressureMinimum { get; set; }
    public double? DynamicSealingPressureMaximum { get; set; }
    public double? DynamicSealingPressureMinimum { get; set; }
    public double? SealDesignTemperatureMaximum { get; set; }
    public double? SealDesignTemperatureMinimum { get; set; }
    public string? CouplingSpecification { get; set; }
    public string? CouplingManufacturer { get; set; }
    public string? CouplingTypeModelSize { get; set; }
    public double? CouplingRatingPowerPer100Rpm { get; set; }
    public string? CouplingComponentsBalanceGrade { get; set; }
    public string? CouplingWithHydraulicFit { get; set; }
    public string? CouplingWithProprietaryClampingDevice { get; set; }
    public string? CouplingGuardSpecification { get; set; }
    public string? CouplingAndExposedShaftGuardMaterial { get; set; }
    public string? DriverType { get; set; }
    public string? DriverSpecification { get; set; }
    public string? DriverManufacturer { get; set; }
    public string? DriverRating { get; set; }
    public string? DriverSizedForTestingOnWater { get; set; }
    public string? DriverFrameOrModel { get; set; }
    public double? DriverNameplatePower { get; set; }
    public double? DriverNominalSpeed { get; set; }
    public double? DriverRatedLoadSpeed { get; set; }
    public string? DriverLubricationMethod { get; set; }
    public string? DriverRadialBearingType { get; set; }
    public string? DriverThrustBearingType { get; set; }
    public string? MotorStartingMethod { get; set; }
    public string? AdjustableSpeedDrive { get; set; }
    public string? SourceOfAdjustableSpeedDrive { get; set; }
    public double? RequiredTripSpeed { get; set; }
    public string? Gear { get; set; }
    public string? GearSpecification { get; set; }
    public string? GearAdjustableSpeedDriveManufacturer { get; set; }
    public string? Accelerometers { get; set; }
    public string? NumberOfAccelerometers { get; set; }
    public string? AccelerometersMountingLocation { get; set; }
    public string? ThreadedProvisionForMountingAccelerometersOnly { get; set; }
    public string? FlatSurfaceProvisionForMountingAccelerometersOnly { get; set; }
    public string? VibrationProbes { get; set; }
    public string? NumberOfVibrationProbesPerRadialBearing { get; set; }
    public string? VibrationProbesMountingLocation { get; set; }
    public string? ThreadedProvisionForMountingVibrationProbesOnly { get; set; }
    public string? FlatSurfaceProvisionForMountingVibrationProbesOnly { get; set; }
    public string? OneEventPerRevolutionProbeKeyPhasor { get; set; }
    public string? TemperatureProbes { get; set; }
    public string? NumberOfTemperatureProbesPerRadialBearing { get; set; }
    public string? TemperatureProbesMountingLOcation { get; set; }
    public string? ProvisionForMountingTemperatureProbesOnly { get; set; }
    public string? TemperatureGaugesWithThermowells { get; set; }
    public string? MonitorsAndCablesSuppliedBy { get; set; }
    public string? HydrostaticTestOfVS6VS7BowlsAndColumn { get; set; }
    public string? ResidualUnbalanceTestMethod { get; set; }
    public string? CleanlinessPriorToFinalAssembly { get; set; }
    public string? NozzleLoadTest { get; set; }
    public string? StructuralResonanceTest { get; set; }
    public string? DriverToBeUsedForTesting { get; set; }
    public string? NotificationOfSuccessfulShopPerformanceTest { get; set; }
    public string? PerformanceTestNPSHALimitedTo110PercentSiteNPSHA { get; set; }
    public string? PerfomanceTestAtMinimumSubmergenceForVerticalSubmergedPumps { get; set; }
    public string? VibrationTestMeasurementLocations { get; set; }
    public string? RetestAfterFinalHeadAdjustment { get; set; }
    public string? NPSHTest { get; set; }
    public string? NPSHTestType { get; set; }
    public string? NPSHTestSpecification { get; set; }
    public string? CompleteUnitTest { get; set; }
    public string? DurationOfCompleteUnitTest { get; set; }
    public string? SoundLevelTest { get; set; }
    public string? AuxilliaryEquipmentTest { get; set; }
    public string? AuxilliaryEquipmentIncludedInTest { get; set; }
    public string? BearingHousingResonanceTest { get; set; }
    public string? DisassemblyAfterTest { get; set; }
    public string? HydrodynamicBearingsRemovalAndInspectionAfterTest { get; set; }
    public string? SurfacePreperationAndPaintingSpecification { get; set; }
    public string? VFDSteadyStateForcedResponseAnalysis { get; set; }
    public string? TransientForcedResponseAnalysis { get; set; }
    public string? TorsionalAnalysisReport { get; set; }
    public string? LateralAnalysis { get; set; }
    public string? CommissioningAndStartUpSparesQuotation { get; set; }
    public string? NormalMaintenanceSparesQuotation { get; set; }
    public string? TwoYearOperatingSparesQuotation { get; set; }
    public string? CapitalSparesQuotation { get; set; }
    public string? SpareRotorStorageOrientation { get; set; }
    public string? ShippingAndStorageContainerForVerticalStorageOfSpareRotor { get; set; }
    public string? InertGasPurgeForSpareRotorContainer { get; set; }
    public string? PreservationAndPackingSpecification { get; set; }
    public string? PreservationAndPackingSuitableFor { get; set; }
    public string? ExportBoxing { get; set; }
    public string? OutdoorStorage { get; set; }
    public double? APIBasePlateNumber { get; set; }
    public string? SizedToAccommodateSealPipingSystems { get; set; }
    public string? BaseplateType { get; set; }
    public string? BaseplateMounting { get; set; }
    public string? StainlessSteelPlateThickness02In5mmMinimumUnderAllPumpFeet { get; set; }
}
